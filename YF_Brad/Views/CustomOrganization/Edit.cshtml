@model YF_Brad.Models.ViewModels.OrgAddView
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>


<!-- Modal -->
<div class="modal" id="editor-container" tabindex="-1" role="dialog" aria-labelledby="editor-title">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="editor-content-container"></div>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <hr />
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="editbox">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgTypeID, "OrgTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("OrgTypeID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.OrgTypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="editbox">
                        <ul class="nav nav-tabs" role="tablist">

                            <li role="presentation" class="active"><a href="#PAddress" aria-controls="PAddress" role="tab" data-toggle="tab">Physical Address</a></li>
                            <li role="presentation"><a href="#BAddress" aria-controls="BAddress" role="tab" data-toggle="tab">Billing Address</a></li>
                        </ul>
                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane active" id="PAddress">
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.PostalID, htmlAttributes: new { id = "PhysicalPostalID" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", id = "PhysicalCity" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", id = "PhysicalState" } })
                                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", id = "PhysicalZip" } })
                                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control", id = "PhysicalCounty" } })
                                        @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div>
                                    <button type="button" class="btn btn-primary" data-id="@Model.Zip" data-toggle="modal" data-target="#editor-container">Postal List</button>
                                </div>
                            </div>

                            <div role="tabpanel" class="tab-pane" id="BAddress">
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BillingFirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingLastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BillingLastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingAddress2, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BillingAddress2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingCity, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingCity, new { htmlAttributes = new { @class = "form-control", id = "BusinessCity" } })
                                        @Html.ValidationMessageFor(model => model.BillingCity, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingState, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingState, new { htmlAttributes = new { @class = "form-control", id = "BusinessState" } })
                                        @Html.ValidationMessageFor(model => model.BillingState, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingZip, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingZip, new { htmlAttributes = new { @class = "form-control", id = "BusinessZip" } })
                                        @Html.ValidationMessageFor(model => model.BillingZip, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingCounty, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingCounty, new { htmlAttributes = new { @class = "form-control", id = "BusinessCounty" } })
                                        @Html.ValidationMessageFor(model => model.BillingCounty, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        <br />


        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
        //When the blur event occurs from your Textbox (you lose focus)
        $('#PhysicalZip').blur(function () {
            var pid = $("#PhysicalZip").val();
            console.log($("#PhysicalZip").val())
            var url = "/PostalInfo/ViewPostalList/" + pid;
            console.log(url)
            $.ajax({
                url: url,
                success: function (data) {
                    console.log("test for Bradley!")
                    $('#editor-content-container').html(data);
                    $('#editor-container').modal('show');
                },
                error: function () {
                    console.log("test for Bradley!")
                }
            });
        });

        $('#editor-container').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });
    });

    function success(data, status, xhr) {
        $('#editor-container').modal('hide');
    }

    function failure(xhr, status, error) {
        $('#editor-container').modal('show');
    }
</script>
<script type="text/javascript">
        $(function () {
            //When the blur event occurs from your Textbox (you lose focus)
            $('#BusinessZip').blur(function () {
                var pid1 = $("#BusinessZip").val();
                console.log($("#BusinessZip").val())
                var url = "/PostalInfo/ViewBusinessPostalList/" + pid1;
                console.log(url)
                $.ajax({
                    url: url,
                    success: function (data) {
                        $('#editor-content-container').html(data);
                        $('#editor-container').modal('show');
                    }
                });
            });

            $('#editor-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
        });

        function success(data, status, xhr) {
            $('#editor-container').modal('hide');
        }

        function failure(xhr, status, error) {
            $('#editor-container').modal('show');
        }

    </script>
}



@*<script>
    var setID = function() {
        @ViewBag.zip = $("#PhysicalZip").val()
    }
</script>*@
